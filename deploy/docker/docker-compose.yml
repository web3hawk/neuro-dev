version: '3.8'

services:
  # Backend service
  neuro-dev-backend:
    build:
      context: ../../
      dockerfile: deploy/docker/backend.Dockerfile
    image: neuro-dev/backend:latest
    container_name: neuro-dev-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - NODE_ENV=development
      - NEURO_SETTINGS_PATH=/app/config/settings.yml
    volumes:
      - backend-data:/app/data
      - ./logs:/app/logs
    networks:
      - neuro-dev-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"

  # Frontend service
  neuro-dev-frontend:
    build:
      context: ../../
      dockerfile: deploy/docker/frontend.Dockerfile
    image: neuro-dev/frontend:latest
    container_name: neuro-dev-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://neuro-dev-backend:8080
      - NODE_ENV=development
    networks:
      - neuro-dev-network
    depends_on:
      neuro-dev-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  # Optional: Database service (if needed in the future)
  # database:
  #   image: postgres:15-alpine
  #   container_name: neuro-dev-db
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_DB=neuro_dev
  #     - POSTGRES_USER=neuro_user
  #     - POSTGRES_PASSWORD=neuro_password
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
  #     - ./init-scripts:/docker-entrypoint-initdb.d
  #   networks:
  #     - neuro-dev-network
  #   ports:
  #     - "5432:5432"

  # Optional: Redis cache (if needed in the future)
  # redis:
  #   image: redis:7-alpine
  #   container_name: neuro-dev-redis
  #   restart: unless-stopped
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - neuro-dev-network
  #   ports:
  #     - "6379:6379"

# Networks
networks:
  neuro-dev-network:
    driver: bridge
    name: neuro-dev-network

# Volumes
volumes:
  backend-data:
    name: neuro-dev-backend-data
  # db-data:
  #   name: neuro-dev-db-data
  # redis-data:
  #   name: neuro-dev-redis-data