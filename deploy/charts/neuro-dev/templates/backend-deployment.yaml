apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.backend.name }}
    component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.backend.name }}
      component: backend
  template:
    metadata:
      labels:
        app: {{ .Values.backend.name }}
        component: backend
    spec:
      containers:
      - name: {{ .Values.backend.name }}
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.backend.service.targetPort }}
          name: http
        env:
        {{- range .Values.backend.env }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        {{- if .Values.config.enabled }}
        - name: config-volume
          mountPath: /app/config
        {{- end }}
        {{- if .Values.secret.enabled }}
        - name: secret-volume
          mountPath: /app/secrets
          readOnly: true
        {{- end }}
      volumes:
      {{- if .Values.config.enabled }}
      - name: config-volume
        configMap:
          name: {{ .Values.backend.name }}-config
      {{- end }}
      {{- if .Values.secret.enabled }}
      - name: secret-volume
        secret:
          secretName: {{ .Values.backend.name }}-secret
      {{- end }}
      restartPolicy: Always